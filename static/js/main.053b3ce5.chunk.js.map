{"version":3,"sources":["components/BarElem.js","components/SingleContainer.js","components/DoubleContainer.js","components/Header.js","App.js","index.js"],"names":["BarElem","props","unactive","height","value","width","active","backgroundColor","className","style","SingleContainer","this","array","map","elem","key","active1","active2","textAlign","FormControl","variant","minWidth","InputLabel","id","Select","labelId","algorithm","onChange","ev","algorithmSelection","name","MenuItem","React","Component","DoubleContainer","state","algorithm1","algorithm2","array1","array2","active21","active22","useStyles","makeStyles","theme","root","flexGrow","btn","marginRight","Header","classes","AppBar","position","background","Toolbar","Button","to","onClick","handleNewArray","onStart","App","array3","array4","auxArray","active31","active32","active41","active42","algorithm3","algorithm4","arr","i","rand","Math","ceil","random","push","setState","slice","event","target","timer","ms","Promise","res","setTimeout","mergesort","list","square","a","getUpdateables","n","length","m","left","maxIndex","min","right","sorted","x","y","tempList","concat","shift","swap","items","leftIndex","rightIndex","temp","quicksort","low","high","stack","Array","top","p","j","pivot","ind","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.053b3ce5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction BarElem(props){\r\n\tconst unactive = {\r\n\t\theight: `${props.value}vh`, \r\n\t\twidth: `${props.width}vw`\r\n\t};\r\n\tconst active = {\r\n\t\theight: `${props.value}vh`, \r\n\t\twidth: `${props.width}vw`,\r\n\t\tbackgroundColor: '#ff0000'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"barElem\" \r\n\t\t\tstyle={props.active ? active: unactive}>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BarElem;","import React from 'react';\r\nimport BarElem from './BarElem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass SingleContainer extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"singleContainer cont\">\r\n\t\t\t\t{this.props.array.map(elem => (\r\n\t\t\t\t\t<BarElem value={elem.value * 0.7} \r\n\t\t\t\t\t\tkey={elem.key} width={0.5} \r\n\t\t\t\t\t\tactive={this.props.active1 === elem.key || this.props.active2 === elem.key}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<div style={{height: \"8vh\", textAlign: \"center\"}}>\r\n\t\t\t\t\t<FormControl variant=\"filled\" style={{minWidth: \"15vw\"}}>\r\n\t\t\t\t        <InputLabel id=\"demo-simple-select-label\" >Select An Algorithm</InputLabel>\r\n\t\t\t\t        <Select\r\n\t\t\t\t          labelId=\"demo-simple-select-filled-label\"\r\n         \t\t\t\t  id=\"demo-simple-select-filled\"\r\n\t\t\t\t          value={this.props.algorithm}\r\n\t\t\t\t          onChange={(ev) => this.props.algorithmSelection(ev)}\r\n\t\t\t\t          name=\"algorithm\"\r\n\t\t\t\t        >\r\n\t\t\t\t        \t<MenuItem value=\"mergesort\">Merge Sort</MenuItem>\r\n\t\t\t\t          \t<MenuItem value=\"quicksort\">Quick Sort</MenuItem>\r\n\t\t\t\t        </Select>\r\n\t\t\t      </FormControl>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SingleContainer;","import React from 'react';\r\nimport BarElem from './BarElem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass DoubleContainer extends React.Component{\r\n\tstate = {\r\n\t\talgorithm1: \"\",\r\n\t\talgorithm2: \"\",\r\n\t\tarray1: [],\r\n\t\tarray2: []\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"doubleContainer cont\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\r\n\t\t\t\t{this.props.array.map(elem => (\r\n\t\t\t\t\t<BarElem \r\n\t\t\t\t\t\tvalue={elem.value * 0.35} \r\n\t\t\t\t\t\tkey={elem.key} \r\n\t\t\t\t\t\twidth={0.5}\r\n\t\t\t\t\t\tactive={this.props.active1 === elem.key || this.props.active2 === elem.key}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<div style={{textAlign: 'center'}}>\r\n\t\t\t\t<FormControl variant=\"filled\" style={{minWidth: \"16vw\"}}>\r\n\t\t\t\t        <InputLabel id=\"demo-simple-select-label\" >Select An Algorithm</InputLabel>\r\n\t\t\t\t        <Select\r\n\t\t\t\t          labelId=\"demo-simple-select-filled-label\"\r\n         \t\t\t\t  id=\"demo-simple-select-filled\"\r\n\t\t\t\t          value={this.props.algorithm}\r\n\t\t\t\t          onChange={(ev) => this.props.algorithmSelection(ev)}\r\n\t\t\t\t          name=\"algorithm\"\r\n\t\t\t\t        >\r\n\t\t\t\t        \t<MenuItem value=\"mergesort\">Merge Sort</MenuItem>\r\n\t\t\t\t          \t<MenuItem value=\"quicksort\">Quick Sort</MenuItem>\r\n\t\t\t\t        </Select>\r\n\t\t\t      </FormControl>\r\n\t\t\t      </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\r\n\t\t\t\t{this.props.array2.map(elem => (\r\n\t\t\t\t\t<BarElem \r\n\t\t\t\t\t\tvalue={elem.value * 0.35} \r\n\t\t\t\t\t\tkey={elem.key} \r\n\t\t\t\t\t\twidth={0.5}\r\n\t\t\t\t\t\tactive={this.props.active21 === elem.key || this.props.active22 === elem.key}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<div style={{textAlign: 'center'}}>\r\n\t\t\t\t<FormControl variant=\"filled\" style={{minWidth: \"15vw\"}}>\r\n\t\t\t\t        <InputLabel id=\"demo-simple-select-label\" >Select An Algorithm</InputLabel>\r\n\t\t\t\t        <Select\r\n\t\t\t\t          labelId=\"demo-simple-select-filled-label\"\r\n         \t\t\t\t  id=\"demo-simple-select-filled\"\r\n\t\t\t\t          value={this.props.algorithm2}\r\n\t\t\t\t          onChange={(ev) => this.props.algorithmSelection(ev)}\r\n\t\t\t\t          name=\"algorithm2\"\r\n\t\t\t\t        >\r\n\t\t\t\t        \t<MenuItem value=\"mergesort\">Merge Sort</MenuItem>\r\n\t\t\t\t          \t<MenuItem value=\"quicksort\">Quick Sort</MenuItem>\r\n\t\t\t\t        </Select>\r\n\t\t\t      </FormControl>\r\n\t\t\t      </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n}\r\n\r\nexport default DoubleContainer;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  btn: {\r\n  \tmarginRight: '2vw' \r\n  }\r\n}));\r\n\r\nfunction Header(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{background: \"#5f5f5f\"}}>\r\n        <Toolbar>\r\n        \t<div className={classes.root}>\r\n\t        \t<Button variant=\"contained\" className={classes.btn} >\r\n\t            \t<Link to=\"/\">Single Sorting</Link>\r\n\t          \t</Button>\r\n\t         \t<Button variant=\"contained\" className={classes.btn} >\r\n\t            \t<Link to=\"/doubleContainer\">Compare 2 Sorting Algorithm</Link>\r\n\t          \t</Button>\r\n         \t</div>\r\n         \t<div className={classes.root}></div>\r\n         \t<div>\r\n\t         \t<Button variant=\"contained\" className={classes.btn} onClick={() => props.handleNewArray()}>\r\n\t            \tGenerate Array\r\n\t          \t</Button>\r\n\t         \t<Button variant=\"contained\" className={classes.btn} \r\n              style={{marginRight: '0vw'}} onClick={()=>props.onStart()}>\r\n\t            \tGO!\r\n\t         \t</Button>\r\n         \t</div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './App.css';\r\nimport SingleContainer from './components/SingleContainer';\r\nimport DoubleContainer from './components/DoubleContainer';\r\nimport Header from './components/Header';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    array: [], \r\n    array2: [],\r\n    array3: [],\r\n    array4: [],\r\n    auxArray: [],\r\n    active1: 101,\r\n    active2: 101,\r\n    active21: 101,\r\n    active22: 101,\r\n    active31: 101,\r\n    active32: 101,\r\n    active41: 101,\r\n    active42: 101,\r\n    algorithm: 'heapsort',\r\n    algorithm2: 'heapsort',\r\n    algorithm3: 'heapsort',\r\n    algorithm4: 'heapsort',\r\n  }\r\n\r\n  handleNewArray = () => {\r\n    const arr = [];\r\n    for (var i = 0; i<100; i++){\r\n      var rand = Math.ceil(Math.random() * 100);\r\n      arr.push({key: i, value: rand});\r\n    }\r\n    this.setState({\r\n      array: arr.slice(), \r\n      array2: arr.slice(),\r\n      array3: arr.slice(),\r\n      array4: arr.slice()\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.handleNewArray();\r\n  }\r\n\r\n  algorithmSelection = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  timer = (ms) => {\r\n    return new Promise(res => setTimeout(res, ms));\r\n  }\r\n\r\n  mergesort = async (list, square) => {\r\n    const [active1, active2, array] = this.getUpdateables(square);\r\n    var n = list.length;\r\n    var m = 1;\r\n    var right;\r\n    var left;\r\n    var sorted; \r\n    var maxIndex;\r\n    var x;\r\n    var y;\r\n\r\n    while (m < n){\r\n      var i = 0;\r\n      while(i< n - m){\r\n\r\n        left = list.slice(i, i+m);\r\n        maxIndex = Math.min(i+2*m, n);\r\n        right = list.slice(i+m, maxIndex);\r\n        sorted = [];\r\n\r\n        while(left.length && right.length){\r\n          x = list.slice(0, i);\r\n          y = list.slice(maxIndex, list.length);\r\n          var tempList = x.concat(sorted, left, right, y);\r\n         \r\n          await this.timer(25);\r\n          this.setState({\r\n            [array]: tempList,\r\n            [active1]: left[0].key,\r\n            [active2]: right[0].key\r\n          });\r\n          \r\n          if(left[0].value <= right[0].value){\r\n            sorted.push(left.shift());\r\n          }else{\r\n            sorted.push(right.shift());\r\n          }\r\n        }\r\n\r\n        while(left.length){\r\n          sorted.push(left.shift());\r\n        }\r\n\r\n        while(right.length){\r\n          sorted.push(right.shift());\r\n        }\r\n\r\n        x = list.slice(0, i);\r\n        y = list.slice(maxIndex, list.length);\r\n        list = x.concat(sorted, y);\r\n        \r\n        await this.timer(25);\r\n        this.setState({\r\n          [array]: list,\r\n          [active1]: list[i].key,\r\n          [active2]: list[maxIndex-1].key\r\n        });\r\n\r\n        i = i + 2*m\r\n      }\r\n      m = m * 2;\r\n\r\n      this.setState({\r\n        [active1]: 101,\r\n        [active2]: 101\r\n      })\r\n    }\r\n    return list\r\n  }\r\n\r\n\r\n  swap = (items, leftIndex, rightIndex) => {\r\n    var temp = items[leftIndex];\r\n    items[leftIndex] = items[rightIndex];\r\n    items[rightIndex] = temp;\r\n  }\r\n\r\n\r\n  quicksort = async (list, square) => {\r\n    const [active1, active2, array] = this.getUpdateables(square);\r\n    var low = 0;\r\n    var high = list.length - 1;\r\n    var size = high - low + 1;\r\n    var stack = new Array(size);\r\n    var top = -1;\r\n    stack[++top] = low;\r\n    stack[++top] = high;\r\n\r\n    while(top >= 0){\r\n      high = stack[top--];\r\n      low = stack[top--];\r\n      var p = list[high];\r\n      var i = low - 1;\r\n\r\n      for(var j = low; j<=high-1; j++){\r\n        if(list[j].value <= p.value){\r\n          i++;\r\n          await this.timer(25);\r\n          this.swap(list, i, j);\r\n\r\n          this.setState({\r\n            [array]: list,\r\n            [active1]: p.key,\r\n            [active2]: j\r\n          })          \r\n        }\r\n      } \r\n\r\n      this.swap(list, i+1, high);\r\n      var pivot = i + 1;\r\n\r\n      await this.timer(25);\r\n      this.setState({\r\n        [array]: list,\r\n        [active1]: high,\r\n        [active2]: low\r\n      })\r\n\r\n      if (pivot - 1 > low){\r\n        stack[++top] = low;\r\n        stack[++top] = pivot - 1;\r\n      }\r\n\r\n      if (pivot+1 < high){\r\n        stack[++top] = pivot + 1;\r\n        stack[++top] = high;\r\n      }\r\n    }\r\n    this.setState({\r\n      [array]: list,\r\n      [active1]: 101,\r\n      [active2]: 101\r\n    })\r\n    return stack;\r\n  }\r\n\r\n  getUpdateables = (ind) => {\r\n    if (ind === 1){\r\n      return ['active1', 'active2', 'array'];\r\n    }else if (ind === 2){\r\n      return ['active21', 'active22', 'array2'];\r\n    }else if(ind === 3){\r\n      return ['active31', 'active32', 'array3'];\r\n    }else if (ind === 4){\r\n      return ['active41', 'active42', 'array4'];\r\n    }\r\n  }\r\n\r\n\r\n  onStart = () => {\r\n    let algorithm = this.state.algorithm;\r\n    let algorithm2 = this.state.algorithm2;\r\n\r\n    \r\n    if(algorithm === 'mergesort'){\r\n      this.mergesort(this.state.array, 1);\r\n    }else if(algorithm === 'quicksort'){\r\n      this.quicksort(this.state.array, 1);\r\n    }\r\n\r\n    if(algorithm2 === 'mergesort'){\r\n      this.mergesort(this.state.array2, 2);\r\n    }else if(algorithm2 === 'quicksort'){\r\n      this.quicksort(this.state.array2, 2);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header handleNewArray={this.handleNewArray} onStart={this.onStart} />\r\n          <Switch>\r\n            <Route path='/doubleContainer'> \r\n              <DoubleContainer \r\n                array={this.state.array} \r\n                array2={this.state.array2}\r\n                active1={this.state.active1}\r\n                active2={this.state.active2}\r\n                active21={this.state.active21}\r\n                active22={this.state.active22}\r\n                algorithm={this.state.algorithm}\r\n                algorithm2={this.state.algorithm2}\r\n                algorithmSelection={this.algorithmSelection}\r\n              />\r\n            </Route>\r\n            <Route path='/'> \r\n              <SingleContainer array={this.state.array} \r\n                active1={this.state.active1}\r\n                active2={this.state.active2}\r\n                algorithm={this.state.algorithm}\r\n                algorithmSelection={this.algorithmSelection}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}